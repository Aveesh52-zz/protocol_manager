// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class UpdateIntervalEntity extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));

    this.set("intervalRewards", Value.fromBigInt(BigInt.zero()));
    this.set("teamReward", Value.fromBigInt(BigInt.zero()));
    this.set("treasuryReward", Value.fromBigInt(BigInt.zero()));
    this.set("polyLpReward", Value.fromBigInt(BigInt.zero()));
    this.set("ethLpReward", Value.fromBigInt(BigInt.zero()));
    this.set("creatorCuratorReward", Value.fromBigInt(BigInt.zero()));
    this.set("witnessReward", Value.fromBigInt(BigInt.zero()));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save UpdateIntervalEntity entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save UpdateIntervalEntity entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("UpdateIntervalEntity", id.toString(), this);
    }
  }

  static load(id: string): UpdateIntervalEntity | null {
    return changetype<UpdateIntervalEntity | null>(
      store.get("UpdateIntervalEntity", id)
    );
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get intervalRewards(): BigInt {
    let value = this.get("intervalRewards");
    return value!.toBigInt();
  }

  set intervalRewards(value: BigInt) {
    this.set("intervalRewards", Value.fromBigInt(value));
  }

  get teamReward(): BigInt {
    let value = this.get("teamReward");
    return value!.toBigInt();
  }

  set teamReward(value: BigInt) {
    this.set("teamReward", Value.fromBigInt(value));
  }

  get treasuryReward(): BigInt {
    let value = this.get("treasuryReward");
    return value!.toBigInt();
  }

  set treasuryReward(value: BigInt) {
    this.set("treasuryReward", Value.fromBigInt(value));
  }

  get polyLpReward(): BigInt {
    let value = this.get("polyLpReward");
    return value!.toBigInt();
  }

  set polyLpReward(value: BigInt) {
    this.set("polyLpReward", Value.fromBigInt(value));
  }

  get ethLpReward(): BigInt {
    let value = this.get("ethLpReward");
    return value!.toBigInt();
  }

  set ethLpReward(value: BigInt) {
    this.set("ethLpReward", Value.fromBigInt(value));
  }

  get creatorCuratorReward(): BigInt {
    let value = this.get("creatorCuratorReward");
    return value!.toBigInt();
  }

  set creatorCuratorReward(value: BigInt) {
    this.set("creatorCuratorReward", Value.fromBigInt(value));
  }

  get witnessReward(): BigInt {
    let value = this.get("witnessReward");
    return value!.toBigInt();
  }

  set witnessReward(value: BigInt) {
    this.set("witnessReward", Value.fromBigInt(value));
  }
}
